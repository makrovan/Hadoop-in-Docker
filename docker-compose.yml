services:
  ldap-server:
    build:
      target: hadoop-ldap-server
    volumes:
      - ./Data/LDAP/keyfiles:/etc/krb5kdc/keyfiles
    container_name: ldap-server
    hostname: ldap-server.docker.net
    networks:
      docker.net:
        ipv4_address: 192.168.9.31
    restart: always
    extra_hosts: &hosts
      ldap-server.docker.net: 192.168.9.31
      kdc-server.docker.net: 192.168.9.2
      hadoop-master.docker.net: 192.168.9.10
      hadoop-worker1.docker.net: 192.168.9.11
      hadoop-worker2.docker.net: 192.168.9.12
      hadoop-rmanager.docker.net: 192.168.9.13
      hadoop-history.docker.net: 192.168.9.15
      hadoop-solr.docker.net: 192.168.9.16
      hadoop-postgres.docker.net: 192.168.9.17
      hadoop-ranger.docker.net: 192.168.9.18
      hadoop-client.docker.net: 192.168.9.100
    
  kdc-server:
    build:
      target: hadoop-kdc-server
    volumes:
      - ./Data/KDC/keytabs:/root/keytabs
      - ./Data/LDAP/keyfiles:/etc/krb5kdc/keyfiles
    container_name: kdc-server
    hostname: kdc-server.docker.net
    networks:
      docker.net:
        ipv4_address: 192.168.9.2
    restart: always
    extra_hosts: *hosts
    depends_on:
      - ldap-server

  hadoop-master:
    build: 
      target: hadoop-master
    container_name: hadoop-master
    volumes:
      - ./Data/NameNode:/usr/local/hadoop/data/nameNode
      - ./Data/KDC/keytabs:/etc/security/keytab/
      - ./Data/LDAP/keyfiles:/etc/krb5kdc/keyfiles
    hostname: hadoop-master.docker.net
    networks:
      docker.net:
        ipv4_address: 192.168.9.10
    extra_hosts: *hosts
    restart: always
    depends_on:
      - kdc-server
      - hadoop-worker1
      - hadoop-worker2

  hadoop-worker1:
    build:
      target: hadoop-worker
    container_name: hadoop-worker1
    volumes:
      - ./Data/Worker1:/usr/local/hadoop/data/dataNode
      - ./Data/KDC/keytabs:/etc/security/keytab/
      - ./Data/LDAP/keyfiles:/etc/krb5kdc/keyfiles
    hostname: hadoop-worker1.docker.net
    networks:
      docker.net:
        ipv4_address: 192.168.9.11
    extra_hosts: *hosts
    depends_on:
      - kdc-server

  hadoop-worker2:
    build: 
      target: hadoop-worker
    container_name: hadoop-worker2
    volumes:
      - ./Data/Worker2:/usr/local/hadoop/data/dataNode
      - ./Data/KDC/keytabs:/etc/security/keytab/
      - ./Data/LDAP/keyfiles:/etc/krb5kdc/keyfiles
    hostname: hadoop-worker2.docker.net
    networks:
      docker.net:
        ipv4_address: 192.168.9.12
    extra_hosts: *hosts
    depends_on:
      - kdc-server
        
  hadoop-rmanager:
    build: 
      target: hadoop-rmanager
    container_name: hadoop-rmanager
    volumes:
      - ./Data/KDC/keytabs:/etc/security/keytab/
      - ./Data/LDAP/keyfiles:/etc/krb5kdc/keyfiles
    hostname: hadoop-rmanager.docker.net
    networks:
      docker.net:
        ipv4_address: 192.168.9.13
    extra_hosts: *hosts
    restart: always
    depends_on:
      - kdc-server
      - hadoop-master

  hadoop-history:
    build: 
      target: hadoop-history
    container_name: hadoop-history
    volumes:
      - ./Data/KDC/keytabs:/etc/security/keytab/
      - ./Data/LDAP/keyfiles:/etc/krb5kdc/keyfiles
    hostname: hadoop-history.docker.net
    networks:
      docker.net:
        ipv4_address: 192.168.9.15
    extra_hosts: *hosts
    restart: always
    depends_on:
      - hadoop-rmanager
  
  hadoop-client:
    build:
      target: hadoop-client
    container_name: hadoop-client
    hostname: hadoop-client.docker.net
    # privileged: true
    environment:
      - DISPLAY=$DISPLAY
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix:ro
      - ./Data/KDC/keytabs:/etc/security/keytab/
      - ./Data/LDAP/keyfiles:/etc/krb5kdc/keyfiles
    networks:
      docker.net:
        ipv4_address: 192.168.9.100
    extra_hosts: *hosts
    depends_on:
      - hadoop-master
    
  ranger-distrib:
    build:
      target: ranger-distrib
    container_name: ranger-distrib
    hostname: ranger-distrib.docker.net
    volumes:
      - ./Data/Ranger_distrib/ranger:/ranger
      - ./Data/Ranger_distrib/.m2:/.m2
      
  hadoop-postgres:
    image: postgres
    container_name: hadoop-postgres
    hostname: hadoop-postgres.docker.net
    # user: postgres
    environment:
      # - POSTGRES_DB = ranger
      - POSTGRES_PASSWORD="postgres"
      - POSTGRES_HOST_AUTH_METHOD="trust"
    volumes:
      - ./Data/Postgres/Data:/var/lib/postgresql/data/
      - ./scripts/postgres/init-ranger-db.sql:/docker-entrypoint-initdb.d/init-db.sql
      # - ./Config/Postgres/pg_hba.conf:/var/lib/postgresql/data/pg_hba.conf
      # - ./Config/Postgres/pg_hba.conf:/tmp/pg_hba.conf
    networks:
      docker.net:
        ipv4_address: 192.168.9.17
    # ports:
    #   - "5432:5432"
    extra_hosts: *hosts

  hadoop-solr:
    build: 
      target: hadoop-solr
    container_name: hadoop-solr
    hostname: hadoop-solr.docker.net
    volumes:
      - ./Data/Ranger_distrib/ranger/security-admin/contrib/solr_for_audit_setup:/usr/local/solr_for_audit_setup
    networks:
      docker.net:
        ipv4_address: 192.168.9.16
    extra_hosts: *hosts
    depends_on:
      ranger-distrib:
        condition: service_completed_successfully

  hadoop-ranger:
    build: 
      target: hadoop-ranger
    container_name: hadoop-ranger
    hostname: hadoop-ranger.docker.net
    volumes:
      - ./Data/KDC/keytabs:/etc/security/keytab/
      - ./Data/LDAP/keyfiles:/etc/krb5kdc/keyfiles
      - ./Config/Hadoop/conf:/etc/hadoop/conf
      - ./Data/Ranger_distrib/ranger/target:/ranger/target
    networks:
      docker.net:
        ipv4_address: 192.168.9.18
    extra_hosts: *hosts
    depends_on:
      kdc-server:
        condition: service_started
      ranger-distrib:
        condition: service_completed_successfully
      hadoop-postgres:
        condition: service_started
      hadoop-solr:
        condition: service_started
  
networks:
    docker.net:
      driver: bridge
      name: docker.net
      enable_ipv6: false    
      ipam:
        driver: default
        config:
          - subnet: 192.168.9.0/24

# xhost + ${localhost}

# TODO:
# исправить ссылки в Readme.md
# Перейти на Docker swarm
# ApacheRanger и ApacheKnox - попробовать настроить
# настроить керберизацию ApacheRanger

# Настроить pg_hba.conf на соединение JDBC по шифрованному каналу
# SOLRCloud через Zookeeper

# с сервера рейнджера (где установлен СА):
# добавить пользователя в ЛДАП, добавить ему авторизацию керберос
# настроить авторизацию админки рейнджера и синхронизацию юзерсинка
# перевыпустить ключи для ссл хадупа на сертификате СА - проверить, что браузер открывает их сразу
# настройка рейнджер-хдфс
# настройка рейнджер-ямл
# кнокс