# 192.168.1.119:5000 - docker registry
# 192.168.1.119:/share/Data - nfs server with :/share/Data/(CA/KDC/Sync)
services:
  ldap-server:
    image: 192.168.1.119:5000/ldap_server
    build:
      target: ldap-server
    volumes:
      - CA_Vol:/etc/CA
      - Sync_Vol:/etc/sync
    container_name: ldap-server
    hostname: ldap-server.hadoopnet
    networks:
      - hadoopnet
    deploy:
      mode: global
      restart_policy:
        condition: none
      endpoint_mode: dnsrr
      placement:
        constraints:
          - node.labels.TAG==manager

  kdc-server:
    image: 192.168.1.119:5000/kdc_server
    build:
      target: kdc-server
    volumes:
      - CA_Vol:/etc/CA
      - Sync_Vol:/etc/sync
      - KDC_Vol:/etc/security/
    container_name: kdc-server
    hostname: kdc-server.hadoopnet
    networks:
      - hadoopnet
    depends_on:
      - ldap-server
    deploy:
      mode: global
      restart_policy:
        condition: none
      endpoint_mode: dnsrr
      placement:
        constraints:
          - node.labels.TAG==manager

  # hadoop-master:
  #   image: 192.168.1.119:5000/hadoop-master
  #   build:
  #     target: hadoop-master
  #   volumes:
  #     - CA_Vol:/etc/CA
  #     - Sync_Vol:/etc/sync
  #     - KDC_Vol:/etc/security/
  #     - ~/Data/NameNode:/usr/local/hadoop/data/nameNode
  #   container_name: hadoop-master
  #   hostname: hadoop-master.hadoopnet
  #   networks:
  #     - hadoopnet
  #   depends_on:
  #     - kdc-server
  #     - hadoop-worker1
  #     - hadoop-worker2
  #   deploy:
  #     mode: global
  #     restart_policy:
  #       condition: none
  #     endpoint_mode: dnsrr
  #     placement:
  #       constraints:
  #         - node.labels.TAG==worker-1

  # hadoop-worker1:
  #   image: 192.168.1.119:5000/hadoop-worker
  #   build:
  #     target: hadoop-worker
  #   volumes:
  #     - CA_Vol:/etc/CA
  #     - Sync_Vol:/etc/sync
  #     - KDC_Vol:/etc/security/
  #     - ~/Data/Worker1:/usr/local/hadoop/data/dataNode
  #   container_name: hadoop-worker1
  #   hostname: hadoop-worker1.hadoopnet
  #   networks:
  #     - hadoopnet
  #   depends_on:
  #     - kdc-server
  #   deploy:
  #     mode: global
  #     restart_policy:
  #       condition: none
  #     endpoint_mode: dnsrr
  #     placement:
  #       constraints:
  #         - node.labels.TAG==worker-1

  # hadoop-worker2:
  #   image: 192.168.1.119:5000/hadoop-worker
  #   build:
  #     target: hadoop-worker
  #   volumes:
  #     - CA_Vol:/etc/CA
  #     - Sync_Vol:/etc/sync
  #     - KDC_Vol:/etc/security/
  #     - ~/Data/Worker2:/usr/local/hadoop/data/dataNode
  #   container_name: hadoop-worker2
  #   hostname: hadoop-worker2.hadoopnet
  #   networks:
  #     - hadoopnet
  #   depends_on:
  #     - kdc-server
  #   deploy:
  #     mode: global
  #     restart_policy:
  #       condition: none
  #     endpoint_mode: dnsrr
  #     placement:
  #       constraints:
  #         - node.labels.TAG==worker-1

  # hadoop-rmanager:
  #   image: 192.168.1.119:5000/hadoop-rmanager
  #   build:
  #     target: hadoop-rmanager
  #   volumes:
  #     - CA_Vol:/etc/CA
  #     - Sync_Vol:/etc/sync
  #     - KDC_Vol:/etc/security/
  #   container_name: hadoop-rmanager
  #   hostname: hadoop-rmanager.hadoopnet
  #   networks:
  #     - hadoopnet
  #   depends_on:
  #     - kdc-server
  #     - hadoop-master
  #   deploy:
  #     mode: global
  #     restart_policy:
  #       condition: none
  #     endpoint_mode: dnsrr
  #     placement:
  #       constraints:
  #         - node.labels.TAG==worker-1

  # hadoop-history:
  #   image: 192.168.1.119:5000/hadoop-history
  #   build:
  #     target: hadoop-history
  #   volumes:
  #     - CA_Vol:/etc/CA
  #     - Sync_Vol:/etc/sync
  #     - KDC_Vol:/etc/security/
  #   container_name: hadoop-history
  #   hostname: hadoop-history.hadoopnet
  #   networks:
  #     - hadoopnet
  #   depends_on:
  #     - hadoop-rmanager
  #   deploy:
  #     mode: global
  #     restart_policy:
  #       condition: none
  #     endpoint_mode: dnsrr
  #     placement:
  #       constraints:
  #         - node.labels.TAG==worker-1

  hadoop-postgres:
    image: 192.168.1.119:5000/hadoop-postgres
    build:
      target: hadoop-postgres
    # image: postgres
    volumes:
      - CA_Vol:/etc/CA
      # mkdir -p ~/Data/Postgres
      # chown 999:999 -R ~/Data/Postgres
      - ~/Data/Postgres:/var/lib/postgresql/data
      # https://hub.docker.com/_/postgres Initialization scripts
      - ./scripts/postgres/init-ranger-db.sql:/docker-entrypoint-initdb.d/init-db.sql
      - ./scripts/postgres/log-setting.sh:/docker-entrypoint-initdb.d/log-setting.sh
      - ./scripts/postgres/create-ssl-key.sh:/docker-entrypoint-initdb.d/init-ssl.sh
    container_name: hadoop-postgres
    hostname: hadoop-postgres.hadoopnet
    networks:
      - hadoopnet
    user: postgres
    environment:
      - POSTGRES_PASSWORD=postgres
    deploy:
      mode: global
      restart_policy:
        condition: none
      endpoint_mode: dnsrr
      placement:
        constraints:
          - node.labels.TAG==manager

  hadoop-solr:
    image: 192.168.1.119:5000/hadoop-solr
    build:
      target: hadoop-solr
    volumes:
      - CA_Vol:/etc/CA
      - Sync_Vol:/etc/sync
      - KDC_Vol:/etc/security/
    container_name: hadoop-solr
    hostname: hadoop-solr.hadoopnet
    networks:
      - hadoopnet
    depends_on:
      - kdc-server
    deploy:
      mode: global
      restart_policy:
        condition: none
      endpoint_mode: dnsrr
      placement:
        constraints:
          - node.labels.TAG==manager

  hadoop-ranger:
    image: 192.168.1.119:5000/hadoop-ranger
    build:
      target: hadoop-ranger
    volumes:
      - CA_Vol:/etc/CA
      - Sync_Vol:/etc/sync
      - KDC_Vol:/etc/security/
      - KnoxPK:/etc/kpk
    container_name: hadoop-ranger
    hostname: hadoop-ranger.hadoopnet
    networks:
      - hadoopnet
    ports:
      - target: 6182
        published: 6182
        protocol: tcp
        mode: host
    depends_on:
      - kdc-server
      - hadoop-postgres
      - hadoop-solr
    deploy:
      mode: global
      restart_policy:
        condition: none
      endpoint_mode: dnsrr
      placement:
        constraints:
          - node.labels.TAG==manager

  hadoop-knox:
    image: 192.168.1.119:5000/hadoop-knox
    build:
      target: hadoop-knox
    volumes:
      - CA_Vol:/etc/CA
      - Sync_Vol:/etc/sync
      - KDC_Vol:/etc/security/
      - KnoxPK:/etc/kpk
    container_name: hadoop-knox
    hostname: hadoop-knox.hadoopnet
    networks:
      - hadoopnet
    ports:
      - target: 8443
        published: 8443
        protocol: tcp
        mode: host
    depends_on:
      - kdc-server
    deploy:
      mode: global
      restart_policy:
        condition: none
      endpoint_mode: dnsrr
      placement:
        constraints:
          - node.labels.TAG==manager

  hadoop-client:
    image: 192.168.1.119:5000/hadoop-client
    build:
      target: hadoop-client
    environment:
      - DISPLAY=$DISPLAY
    volumes:
      - CA_Vol:/etc/CA
      - Sync_Vol:/etc/sync
      - KDC_Vol:/etc/security/
      - /tmp/.X11-unix:/tmp/.X11-unix:ro
    container_name: hadoop-client
    hostname: hadoop-client.hadoopnet
    networks:
      - hadoopnet
    depends_on:
      - kdc-server
    deploy:
      mode: global
      restart_policy:
        condition: none
      endpoint_mode: dnsrr
      placement:
        constraints:
          - node.labels.TAG==manager

  # ranger-distrib:
  #   image: 192.168.1.119:5000/ranger-distrib
  #   build:
  #     target: ranger-distrib
  #   container_name: ranger-distrib
  #   hostname: ranger-distrib.hadoopnet
  #   volumes:
  #     - ./Data/Ranger_distrib/ranger:/ranger
  #     - ./Data/Ranger_distrib/.m2:/.m2
  #   deploy:
  #     mode: global
  #     restart_policy:
  #       condition: none
  #     endpoint_mode: dnsrr
  #     placement:
  #       constraints:
  #         - node.labels.TAG==manager
      
volumes:
  CA_Vol:
    driver_opts:
      type: "nfs"
      o: "addr=192.168.1.119,rw"
      device: "192.168.1.119:/share/Data/CA"
  Sync_Vol:
    driver_opts:
      type: "nfs"
      o: "addr=192.168.1.119,rw"
      device: "192.168.1.119:/share/Data/Sync"
  KDC_Vol:
    driver_opts:
      type: "nfs"
      o: "addr=192.168.1.119,rw"
      device: "192.168.1.119:/share/Data/KDC"
  KnoxPK:
    driver_opts:
      type: "nfs"
      o: "addr=192.168.1.119,rw"
      device: "192.168.1.119:/share/Data/KnoxPK"

networks:
  hadoopnet:
    driver: overlay
    attachable: true
    name: hadoopnet
    # external: true
